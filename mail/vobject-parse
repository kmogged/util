#!/usr/bin/python

## tkooda : 2013-10-11 : read vObject (vCard / vCalendar) from files on argv, print details on stdout

# BUGS:
#  - only prints the first attendee


import sys
import vobject
import datetime
import dateutil.tz
import pytz


def human_readable_when( dt ):
    s = ""
    dt = dt.replace( tzinfo = None ) # more accurate would be to add tzinfo to now()
    
    diff = dt - datetime.datetime.now()
    minutes, seconds = divmod( diff.days * 86400 + diff.seconds, 60 )
    s += human_readable_seconds( minutes * 60 + seconds )
    
    if dt > datetime.datetime.now():
        s += "from now"
    else:
        s += "ago"
    
    return s


def human_readable_seconds( seconds ):
    minutes = seconds / 60
    h = ""
    
    if minutes / 60 / 24:
        h += "%dd " % ( minutes / 60 / 24 )
    
    if ( minutes / 60 ) % 24:
        h += "%dh " % ( ( minutes / 60 ) % 24 )
    
    if minutes % 60:
        h += "%dm " % ( minutes % 60 )
    
    return h




def get_datetime( dt, when = False ):
    localtz = dateutil.tz.tzlocal()
    localtzname = localtz.tzname( dt )
    
    dt = dt.replace( tzinfo = pytz.utc ).astimezone( localtz ) # NO!
    
    if when:
        return dt.strftime("%A %m/%d/%Y @ %I:%M %p %z") + " (%s)  (%s)" % \
            ( localtzname, human_readable_when( dt ) )
    
    return dt.strftime("%A %m/%d/%Y @ %I:%M %p %z") + " (%s)" % localtzname


def get_email( obj ):
#    return '"%s" <%s> (RSVP = %s)' % ( obj.params.get( "CN", "" )[0], obj.value, obj.params.get( "RSVP", "?" )[0] )
    return '"%s" <%s>' % ( obj.params.get( "CN", "" )[0], obj.value )



for f in sys.argv[ 1: ]:
    fd = open( f, "rb" )
    s = fd.read()
    fd.close()
    
    for component in vobject.readComponents( s ):
        print "Now:  ", get_datetime( datetime.datetime.now() )
        print "Start:", get_datetime( component.vevent.dtstart.value, when = True )
        print "End:  ", get_datetime( component.vevent.dtend.value )
        duration = component.vevent.dtend.value - component.vevent.dtstart.value
        print "Duration:", human_readable_seconds( duration.seconds )
#        print "Created:", get_datetime( component.vevent.created.value )
        print
        
        print "Organizer:", get_email( component.vevent.organizer )
#        print "Attendee:", get_email( component.vevent.attendee ) # don't show only one
        print
#        print "Priority:", component.vevent.priority.value
        print "Summary:", component.vevent.summary.value.encode( "ascii", "ignore" )
        print "Description:", component.vevent.description.value.encode( "ascii", "ignore" )
        print
        
        if component.vevent.rruleset:
            print "Reoccuring:"
            for i in list( component.vevent.rruleset )[ :10 ]:
                print get_datetime( i )
            if len( list( component.vevent.rruleset ) ) > 10:
                print "( plus %d more )" % ( len( list( component.vevent.rruleset ) ) - 10 )
        print
	print
        
        print "[ COMPONENT: ]"
        try:
            del component.vevent.x_alt_desc # delete any optional X-Alt-Desc (e.g. HTML)
        except:
            pass
        component.prettyPrint()
        print
        print
	
        print "[ RAW: ]"
        print s
        print
