#!/usr/bin/python

## tkooda : 2008-05-15 : read data from stdin, print it as soon as we haven't gotten any more data from stdin for $TIMEOUT seconds (for use in bash scripts that need input (e.g. a url dragged from a browser window), that dosn't have a carrige return at the end of it

import os
import sys
import signal
import termios
import tty
import re
import string


def bail( str, err = 1 ):
    sys.stderr.write( str )
    sys.exit( err )

def handler( signum, frame ):
    global buf
    if len( buf ) > 0: # new method
        buf = "".join( char for char in buf if char in string.printable )
        if not buf:
            return
        print buf.strip()
        termios.tcsetattr( fd, termios.TCSANOW, attr_old )
        sys.exit( 1 )
    return


if len( sys.argv ) != 1:
    bail( "usage: %s\n" % sys.argv[ 0 ] )

try:
    timeout = int( os.environ.get( "TIMEDREAD_TIMEOUT" ) )
except:
    timeout = 1

fd = sys.stdin.fileno()
attr_old = termios.tcgetattr(fd)
tty.setraw(fd)
buf = ""

while True:
    signal.signal( signal.SIGALRM, handler ) # set timeout
    signal.alarm( timeout )
    try:
        buf += sys.stdin.read( 1 ) # will block
    except IOError: # old method
        buf = "".join( char for char in buf if char in string.printable )
        if not buf:
            continue
        termios.tcsetattr( fd, termios.TCSANOW, attr_old )
        print buf.strip()
        break

